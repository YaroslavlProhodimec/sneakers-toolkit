{"version":3,"file":"static/js/Login.59b0c3fe.chunk.js","mappings":"6TAqBaA,GAAQC,EAAAA,EAAAA,OAAK,WACtB,IAAAC,GAAgCC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAK,IAA5DC,EAAUJ,EAAVI,WAAWC,EAAUL,EAAVK,WAEdC,GAAWC,EAAAA,EAAAA,MAETC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,QAAS,MAEbC,SAAU,SAACC,GACP,IAAMC,EAA0B,CAAC,EAMjC,OALKD,EAAOL,MAEA,4CAA4CO,KAAKF,EAAOL,SAChEM,EAAON,MAAQ,yBAFfM,EAAON,MAAQ,WAIZM,CACX,EACAE,SAAU,SAAAH,GACNV,GAASc,EAAAA,EAAAA,IAAWJ,GACxB,IAGP,OAAGZ,GACWiB,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,OAGlBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAgB,SAASC,UAC5CN,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACI,MAAI,EAACF,eAAgB,SAAUG,GAAI,CAACC,GAAG,SAASH,UAElDN,EAAAA,EAAAA,KAAA,QAAMF,SAAUX,EAAOuB,aAAaJ,UACpCK,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAN,SAAA,EACRK,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAAP,SAAA,EAENN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,+BACHN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,uBAEPK,EAAAA,EAAAA,MAACG,EAAAA,EAAS,CAAAR,SAAA,EACNN,EAAAA,EAAAA,KAACe,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACC,KAAM,QAASC,MAAM,QAAQC,OAAO,UAChChC,EAAOiC,cAAc,WAEnCjC,EAAOS,OAAON,OAAQU,EAAAA,EAAAA,KAAA,OAAKqB,MAAO,CAACC,MAAM,OAAOhB,SAAEnB,EAAOS,OAAON,QAAe,MAChFU,EAAAA,EAAAA,KAACe,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACC,KAAK,WAAWC,MAAM,WACtBC,OAAO,UACHhC,EAAOiC,cAAc,cAEpB,OAAfpC,IAAwBgB,EAAAA,EAAAA,KAAA,OAAKqB,MAAO,CAACE,WAAW,OAAOC,MAAM,QAAQC,OAAO,SAAUC,IAAK1C,EAAY2C,IAAK,UAC5G3C,IAAegB,EAAAA,EAAAA,KAACe,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACC,KAAK,UAAUC,MAAM,UACpCC,OAAO,UACHhC,EAAOiC,cAAc,cAGrCpB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAgB,CAACV,MAAO,cAAeW,SAAS7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,OAC1D9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACd,KAAM,SAAUe,QAAS,YAAaV,MAAO,UAAUhB,SAAC,qBASpF,G","sources":["components/pages/login/Login.tsx"],"sourcesContent":["import {GlobalError} from \"components/globalError/GlobalError\";\nimport React, {memo} from 'react'\nimport Grid from '@mui/material/Grid';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {useFormik} from \"formik\";\nimport {useAppDispatch, useAppSelector} from \"../../../redux/store\";\nimport {Navigate} from \"react-router-dom\";\nimport {fetchLogin} from \"../../../redux/login/asyncActions\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\nexport const Login = memo(function Login()  {\n    const {isLoggedIn,captchaUrl} = useAppSelector(state => state.login)\n\n  const dispatch = useAppDispatch()\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false,\n            captcha: null\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {}\n            if (!values.email) {\n                errors.email = 'Required'\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address'\n            }\n            return errors\n        },\n        onSubmit: values => {\n            dispatch(fetchLogin(values))\n        },\n    })\n\n if(isLoggedIn){\n        return <Navigate to={'/'}/>\n    }\n\n    return <Grid container justifyContent={'center'}>\n        <Grid item justifyContent={'center'} sx={{mt:'130px'}}>\n\n            <form onSubmit={formik.handleSubmit}>\n            <FormControl>\n                <FormLabel>\n\n                    <p>Email: free@samuraijs.com</p>\n                    <p>Password: free</p>\n                </FormLabel>\n                <FormGroup>\n                    <TextField type={'email'} label=\"Email\" margin=\"normal\"\n                               {...formik.getFieldProps('email')}\n                    />\n                    {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : null}\n                    <TextField type=\"password\" label=\"Password\"\n                               margin=\"normal\"\n                               {...formik.getFieldProps('password')}\n                    />\n                    {captchaUrl  !==null &&  <img style={{marginLeft:'10px',width:'200px',height:'100px'}} src={captchaUrl} alt={'photo'}/>}\n                    {captchaUrl  && <TextField type=\"captcha\" label=\"Captcha\"\n                                margin=\"normal\"\n                                {...formik.getFieldProps('captcha')}\n                    />}\n\n                    <FormControlLabel label={'Remember me'} control={<Checkbox/>}/>\n                    <Button type={'submit'} variant={'contained'} color={'primary'}>\n                        Login\n                    </Button>\n                </FormGroup>\n            </FormControl>\n\n            </form>\n        </Grid>\n    </Grid>\n})"],"names":["Login","memo","_useAppSelector","useAppSelector","state","login","isLoggedIn","captchaUrl","dispatch","useAppDispatch","formik","useFormik","initialValues","email","password","rememberMe","captcha","validate","values","errors","test","onSubmit","fetchLogin","_jsx","Navigate","to","Grid","container","justifyContent","children","item","sx","mt","handleSubmit","_jsxs","FormControl","FormLabel","FormGroup","TextField","_objectSpread","type","label","margin","getFieldProps","style","color","marginLeft","width","height","src","alt","FormControlLabel","control","Checkbox","Button","variant"],"sourceRoot":""}