{"version":3,"file":"static/js/Login.8f2e2cf6.chunk.js","mappings":"6TAqBaA,EAAQ,WACjB,IAAMC,GAAQC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,YAAY,IAE1DC,GAAWC,EAAAA,EAAAA,MAETC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEhBC,SAAU,SAACC,GACP,IAAMC,EAA0B,CAAC,EAMjC,OALKD,EAAOJ,MAEA,4CAA4CM,KAAKF,EAAOJ,SAChEK,EAAOL,MAAQ,yBAFfK,EAAOL,MAAQ,WAIZK,CACX,EACAE,SAAU,SAAAH,GACNT,GAASa,EAAAA,EAAAA,IAAWJ,GAExB,IAEP,OAAGb,GACWkB,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,OAGlBF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAgB,SAASC,UAC5CN,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACI,MAAI,EAACF,eAAgB,SAAUG,GAAI,CAACC,GAAG,SAASH,UAClDN,EAAAA,EAAAA,KAAA,QAAMF,SAAUV,EAAOsB,aAAaJ,UACpCK,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAAN,SAAA,EACRK,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAAP,SAAA,EACNK,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,4BACCN,EAAAA,EAAAA,KAAA,KAAGc,KAAM,wCACNC,OAAQ,SAAST,SAAC,cAGzBN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,6CACHN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,+BACHN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,uBAEPK,EAAAA,EAAAA,MAACK,EAAAA,EAAS,CAAAV,SAAA,EACNN,EAAAA,EAAAA,KAACiB,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACC,KAAM,QAASC,MAAM,QAAQC,OAAO,UAChCjC,EAAOkC,cAAc,WAEnClC,EAAOQ,OAAOL,OAAQS,EAAAA,EAAAA,KAAA,OAAKuB,MAAO,CAACC,MAAM,OAAOlB,SAAElB,EAAOQ,OAAOL,QAAe,MAChFS,EAAAA,EAAAA,KAACiB,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACC,KAAK,WAAWC,MAAM,WACtBC,OAAO,UACHjC,EAAOkC,cAAc,eAEpCtB,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,CAACL,MAAO,cAAeM,SAAS1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,OAC1D3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACT,KAAM,SAAUU,QAAS,YAAaL,MAAO,UAAUlB,SAAC,qBAQpF,C","sources":["components/pages/login/Login.tsx"],"sourcesContent":["import React from 'react'\nimport Grid from '@mui/material/Grid';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {useFormik} from \"formik\";\nimport {useAppDispatch, useAppSelector} from \"../../../redux/store\";\nimport {Simulate} from \"react-dom/test-utils\";\nimport {Navigate} from \"react-router-dom\";\nimport {fetchLogin} from \"../../../redux/login/asyncActions\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\nexport const Login = () => {\n    const login = useAppSelector(state => state.login.isInitialzed)\n\n  const dispatch = useAppDispatch()\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {}\n            if (!values.email) {\n                errors.email = 'Required'\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address'\n            }\n            return errors\n        },\n        onSubmit: values => {\n            dispatch(fetchLogin(values))\n\n        },\n    })\n if(login){\n        return <Navigate to={'/'}/>\n    }\n\n    return <Grid container justifyContent={'center'}>\n        <Grid item justifyContent={'center'} sx={{mt:'130px'}}>\n            <form onSubmit={formik.handleSubmit}>\n            <FormControl>\n                <FormLabel>\n                    <p>To log in get registered\n                        <a href={'https://social-network.samuraijs.com/'}\n                           target={'_blank'}> here\n                        </a>\n                    </p>\n                    <p>or use common test account credentials:</p>\n                    <p>Email: free@samuraijs.com</p>\n                    <p>Password: free</p>\n                </FormLabel>\n                <FormGroup>\n                    <TextField type={'email'} label=\"Email\" margin=\"normal\"\n                               {...formik.getFieldProps('email')}\n                    />\n                    {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : null}\n                    <TextField type=\"password\" label=\"Password\"\n                               margin=\"normal\"\n                               {...formik.getFieldProps('password')}\n                    />\n                    <FormControlLabel label={'Remember me'} control={<Checkbox/>}/>\n                    <Button type={'submit'} variant={'contained'} color={'primary'}>\n                        Login\n                    </Button>\n                </FormGroup>\n            </FormControl>\n            </form>\n        </Grid>\n    </Grid>\n}"],"names":["Login","login","useAppSelector","state","isInitialzed","dispatch","useAppDispatch","formik","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","onSubmit","fetchLogin","_jsx","Navigate","to","Grid","container","justifyContent","children","item","sx","mt","handleSubmit","_jsxs","FormControl","FormLabel","href","target","FormGroup","TextField","_objectSpread","type","label","margin","getFieldProps","style","color","FormControlLabel","control","Checkbox","Button","variant"],"sourceRoot":""}